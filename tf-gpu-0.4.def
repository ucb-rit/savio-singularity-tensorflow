Bootstrap: docker 
From: tensorflow/tensorflow:2.1.0-gpu-py3

%environment
    # avoid warning about inability to change locale
    LC_ALL="C"
    export LC_ALL

%post
    mkdir -p /global/home/users
    mkdir -p /global/scratch
    # /bin/nvidia-smi is a binary on the GPU nodes. Singularity with --nv seems to mount /bin/nvidia-smi and fails unless the file already exists in the container. 
    touch /bin/nvidia-smi
    # avoid warnings about non existent bind points
    touch /usr/bin/nvidia-smi
    touch /usr/bin/nvidia-debugdump
    touch /usr/bin/nvidia-persistenced
    touch /usr/bin/nvidia-cuda-mps-control
    touch /usr/bin/nvidia-cuda-mps-server
    # For some reason these (empty) files are created in the Singularity container (they are not present in the Docker container) and their presence causes a permission denied error when using Tensorflow 2.1.0 (perhaps other recent versions too?) in the container. Removing them seems to 'solve' the problem.
    rm -rf /usr/lib/python3/dist-packages/.wh.six-1.11.0.egg-info /usr/lib/python3/dist-packages/.wh.six.py

%runscript
    python "$@"

%startscript
    # Not working because can't figure out how to write to a directory accessible to user and instance.start seems to execute without reference to the user
    # if [ "${SLURM_JOB_ID}" != "" ]; then jupyter notebook --no-browser --ip=${SLURMD_NODENAME} 2>> slurm-${SLURM_JOB_ID}.out; else env && jupyter notebook --no-browser --ip="localhost" 2> jupyter-tf-gpu.out; fi
